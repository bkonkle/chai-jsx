{"version":3,"sources":["jsx-chai.js"],"names":["jsxChai","Assertion","inspect","addProperty","addJsx","assert","_obj","jsxMethod","func","jsxMethodWrapper","_super","jsxMethodInner","jsx","apply","arguments","expected","actual","call","jsxEql","jsxInclude","indexOf","overwriteInclude","name","overwriteChainableMethod","includeWrapper","includeInner","overwriteMethod"],"mappings":";;;kBAIwBA,O;;AAJxB;;AACA;;;;AACA;;;;;;AAEe,SAASA,OAAT,cAAyC;AAAA,MAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,MAAVC,OAAU,SAAVA,OAAU;;;AAEtDD,YAAUE,WAAV,CAAsB,KAAtB,EAA6B,SAASC,MAAT,GAAkB;AAC7C,SAAKC,MAAL,CACE,0BAAU,KAAKC,IAAf,CADF,EAEE,sCAFF,EAGE,0CAHF;AAKD,GAND;;AAQA,WAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACvB,WAAO,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AACvC,aAAO,SAASC,cAAT,CAAwBC,GAAxB,EAA6B;AAClC,YAAI,CAAC,0BAAU,KAAKN,IAAf,CAAL,EAA2B;AACzB,iBAAOI,OAAOG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AACD;;AAED,YAAMC,WAAW,uCAAwBH,GAAxB,CAAjB;AACA,YAAMI,SAAS,uCAAwB,KAAKV,IAA7B,CAAf;;AAEA,eAAOE,KAAKS,IAAL,CAAU,IAAV,EAAgB,EAACL,QAAD,EAAMG,kBAAN,EAAgBC,cAAhB,EAAhB,CAAP;AACD,OATD;AAUD,KAXD;AAYD;;AAED,WAASE,MAAT,QAAoC;AAAA,QAAnBH,QAAmB,SAAnBA,QAAmB;AAAA,QAATC,MAAS,SAATA,MAAS;;AAClC,SAAKX,MAAL,CACE,kCAASW,MAAT,MAAqB,kCAASD,QAAT,CADvB,EAEE,iCAFF,EAGE,qCAHF,EAIEA,QAJF,EAKEC,MALF,EAME,IANF;AAQD;;AAED,WAASG,UAAT,QAAwC;AAAA,QAAnBJ,QAAmB,SAAnBA,QAAmB;AAAA,QAATC,MAAS,SAATA,MAAS;;AACtC,SAAKX,MAAL,CACE,CAAC,kCAASW,MAAT,EAAiBI,OAAjB,CAAyB,kCAASL,QAAT,CAAzB,CADH,kCAEgCb,QAAQa,QAAR,CAFhC,sCAGoCb,QAAQa,QAAR,CAHpC,EAIEA,QAJF,EAKEC,MALF;AAOD;;AAED,WAASK,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9BrB,cAAUsB,wBAAV,CACED,IADF,EAEEf,UAAUY,UAAV,CAFF,EAGE,SAASK,cAAT,CAAwBd,MAAxB,EAAgC;AAC9B,aAAO,SAASe,YAAT,GAAwB;AAC7B,eAAOf,OAAOG,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAP;AACD,OAFD;AAGD,KAPH;AASD;;AAEDb,YAAUyB,eAAV,CAA0B,KAA1B,EAAiCnB,UAAUW,MAAV,CAAjC;AACAjB,YAAUyB,eAAV,CAA0B,MAA1B,EAAkCnB,UAAUW,MAAV,CAAlC;;AAEAG,mBAAiB,SAAjB;AACAA,mBAAiB,SAAjB;AACAA,mBAAiB,UAAjB;AACAA,mBAAiB,UAAjB;AAED","file":"jsx-chai.js","sourcesContent":["import {isElement} from 'react-dom/test-utils'\nimport collapse from 'collapse-white-space'\nimport reactElementToJSXString from 'react-element-to-jsx-string'\n\nexport default function jsxChai({Assertion}, {inspect}) {\n\n  Assertion.addProperty('jsx', function addJsx() {\n    this.assert(\n      isElement(this._obj),\n      'expected #{this} to be a JSX element',\n      'expected #{this} not to be a JSX element'\n    )\n  })\n\n  function jsxMethod(func) {\n    return function jsxMethodWrapper(_super) {\n      return function jsxMethodInner(jsx) {\n        if (!isElement(this._obj)) {\n          return _super.apply(this, arguments)\n        }\n\n        const expected = reactElementToJSXString(jsx)\n        const actual = reactElementToJSXString(this._obj)\n\n        return func.call(this, {jsx, expected, actual})\n      }\n    }\n  }\n\n  function jsxEql({expected, actual}) {\n    this.assert(\n      collapse(actual) === collapse(expected),\n      'expected #{act} to equal #{exp}',\n      'expected #{act} to not equal #{exp}',\n      expected,\n      actual,\n      true\n    )\n  }\n\n  function jsxInclude({expected, actual}) {\n    this.assert(\n      ~collapse(actual).indexOf(collapse(expected)),\n      `expected #{act} to contain ${inspect(expected)}`,\n      `expected #{act} to not contain ${inspect(expected)}`,\n      expected,\n      actual\n    )\n  }\n\n  function overwriteInclude(name) {\n    Assertion.overwriteChainableMethod(\n      name,\n      jsxMethod(jsxInclude),\n      function includeWrapper(_super) {\n        return function includeInner() {\n          return _super.apply(this, arguments)\n        }\n      }\n    )\n  }\n\n  Assertion.overwriteMethod('eql', jsxMethod(jsxEql))\n  Assertion.overwriteMethod('eqls', jsxMethod(jsxEql))\n\n  overwriteInclude('include')\n  overwriteInclude('contain')\n  overwriteInclude('includes')\n  overwriteInclude('contains')\n\n}\n"]}